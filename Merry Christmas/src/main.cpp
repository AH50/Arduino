#include <Arduino.h>

#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const uint8_t  PROGMEM bitmap[] = {
0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff
,0xff,0xff,0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff
,0xff,0xff,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0xff,0xff
,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff
,0xff,0xfe,0x00,0x00,0x01,0xff,0xff,0xe1,0xff,0xff,0xf8,0x00,0x00,0x01,0xff,0xff
,0xff,0xfc,0x00,0x00,0x07,0xff,0xfc,0x00,0x0f,0xff,0xfc,0x00,0x00,0x00,0xff,0xff
,0xff,0xf8,0x00,0x00,0x0f,0xff,0xcc,0x00,0x0c,0xff,0xff,0x00,0x00,0x00,0x7f,0xff
,0xff,0xf0,0x00,0x00,0x3f,0xfc,0x01,0xe1,0xe0,0x0f,0xff,0xc0,0x00,0x00,0x1f,0xff
,0xff,0xc0,0x00,0x00,0xff,0xe0,0x00,0x1e,0x00,0x01,0xff,0xe0,0x00,0x00,0x0f,0xff
,0xff,0xc0,0x00,0x01,0xfc,0x0e,0x01,0xe1,0xe0,0x1c,0x0f,0xf0,0x00,0x00,0x07,0xff
,0xff,0x80,0x00,0x01,0xc0,0x00,0xfc,0x00,0x0f,0xc0,0x00,0xf0,0x00,0x00,0x07,0xff
,0xff,0x00,0x00,0x03,0xe0,0x00,0xfe,0x00,0x1f,0xc0,0x01,0xf8,0x00,0x00,0x03,0xff
,0xff,0x00,0x00,0x03,0x1e,0x1c,0x00,0xe1,0xc0,0x0e,0x1e,0x38,0x00,0x00,0x01,0xff
,0xff,0x00,0x00,0x07,0x01,0xe0,0x00,0x1e,0x00,0x01,0xe0,0x38,0x00,0x00,0x01,0xff
,0xfe,0x00,0x00,0x07,0x00,0x5e,0x01,0xc0,0xe0,0x1e,0x80,0x38,0x00,0x00,0x00,0xff
,0xfe,0x00,0x00,0x07,0x00,0x41,0xfc,0x00,0x0f,0xe0,0x80,0x38,0x00,0x00,0x00,0x7f
,0xfc,0x00,0x00,0x07,0x00,0x40,0x3e,0x00,0x1f,0x00,0x80,0x38,0x00,0x00,0x00,0x7f
,0xfc,0x00,0x00,0x07,0xc0,0x40,0x31,0xe1,0xe3,0x00,0x80,0xf8,0x00,0x00,0x00,0x3f
,0xfc,0x00,0x00,0x07,0x3c,0x40,0x30,0x1e,0x03,0x00,0x8f,0x38,0x00,0x00,0x00,0x3f
,0xfc,0x00,0x00,0x07,0x03,0xc0,0x30,0x0c,0x03,0x00,0xe0,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x00,0x7c,0x30,0x0c,0x03,0x0f,0x80,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x00,0x41,0xf0,0x0c,0x03,0xe0,0x80,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x00,0x40,0x3c,0x0c,0x0f,0x00,0x80,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0xc0,0x40,0x33,0xcc,0xf3,0x00,0x80,0xf8,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x3c,0x40,0x30,0x1e,0x03,0x00,0x8f,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x03,0xc0,0x30,0x0c,0x03,0x00,0xf0,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x00,0x7c,0x30,0x0c,0x03,0x0f,0x80,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x00,0x43,0xf0,0x0c,0x03,0xf0,0x80,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x00,0x40,0x3c,0x0c,0x0f,0x00,0x80,0x38,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0x80,0x40,0x33,0xcc,0xf3,0x00,0x80,0x70,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x07,0xf8,0x40,0x30,0x3f,0x03,0x00,0x87,0xf0,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x03,0xff,0xc0,0x30,0x0c,0x03,0x00,0xff,0xe0,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x03,0xff,0xf8,0x30,0x0c,0x03,0x07,0xff,0xe0,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x03,0xff,0xff,0xb0,0x0c,0x03,0x7f,0xff,0xe0,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x00,0xff,0xff,0xf8,0x0c,0x07,0xff,0xff,0xc0,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x00,0x1f,0xff,0xff,0x8c,0x7f,0xff,0xff,0x00,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f
,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f

};
void tekst(void);
void setup() {
    Serial.begin(9600);
    if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
  }
  display.display();
  tekst();
}

void loop() {}
void tekst(){
display.display();
display.clearDisplay();
display.drawPixel(64, 32, WHITE);
display.display();
delay(3000);


display.clearDisplay();
display.setTextSize(5);
display.setTextColor(WHITE);
display.setCursor(28,16);
display.println(F("JK?"));
display.display();
delay(3000);

display.clearDisplay();
display.display();
delay(500);
display.setTextSize(5);
display.setTextColor(WHITE);
display.setCursor(28,16);
display.println(F("JR?"));
display.display();
delay(3000);

/*
char tab[23] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'W' ,'Y' ,'Z'};
for(int i=0;i<23;i++)
{
display.clearDisplay();
 display.setTextSize(5);
 display.setTextColor(WHITE);
 display.setCursor(28,16);
 display.print("J");
 display.print(tab[i]);
 display.print("?");
 display.display();
 delay(300);
}
*/

display.clearDisplay();
display.setTextSize(3);
display.setTextColor(WHITE);
display.setCursor(0,16);
display.println(F("Hmmm..."));
display.display();
delay(4000);

display.clearDisplay();
display.setTextSize(2);
display.setTextColor(WHITE);
display.setCursor(0,0);
display.println(F(" Wesolych"));
display.println(F(" Swiat"));
display.println(F(" Etanolu!"));
display.display();
delay(5000);


display.clearDisplay();
display.setTextSize(2);
display.setTextColor(BLACK);
display.setCursor(4,1);
display.drawBitmap(0,0,bitmap,128,64,1);
display.print(F("808    810"));
display.display();
}
